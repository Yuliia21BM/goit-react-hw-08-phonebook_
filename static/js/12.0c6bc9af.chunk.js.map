{"version":3,"file":"static/js/12.0c6bc9af.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/EditModal/EditModal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Formik, Form, Field } from 'formik';\nimport { useState } from 'react';\n\nimport {\n  FormErrorMessage,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Flex,\n  Box,\n  Heading,\n} from '@chakra-ui/react';\n\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n} from 'components/redux/contactsApi';\n\nimport { Notification, patternName } from 'components/utiles';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\nexport const ContactForm = ({ onClose }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact] = useAddContactMutation();\n  const { data } = useFetchContactsQuery();\n\n  const formSubmitHandler = (_, { resetForm }) => {\n    const invalidName = data?.find(state => state.name === name);\n\n    if (invalidName) {\n      Notification(name);\n      resetForm();\n      return;\n    }\n    addContact({ name, number });\n    onClose();\n    resetForm();\n  };\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box p={2}>\n        <Box textAlign=\"center\">\n          <Heading>Add new contact</Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <Formik initialValues={initialValues} onSubmit={formSubmitHandler}>\n            {props => (\n              <Form>\n                <Field name=\"name\" id={nameId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel>Name</FormLabel>\n                      <Input\n                        {...field}\n                        value={name}\n                        type=\"text\"\n                        placeholder=\"John Doe\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern={patternName}\n                        onChange={e => setName(e.target.value)}\n                      />\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                    </FormControl>\n                  )}\n                </Field>\n                <Field name=\"number\" patern={patternName} id={numberId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      mt={4}\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel>Nunber</FormLabel>\n                      <Input\n                        {...field}\n                        value={number}\n                        type=\"telephone\"\n                        placeholder=\"0960000000\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        onChange={e => setNumber(e.target.value)}\n                      />\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                    </FormControl>\n                  )}\n                </Field>\n                <Button\n                  type=\"submit\"\n                  colorScheme=\"yellow\"\n                  variant=\"outline\"\n                  width=\"full\"\n                  mt={6}\n                >\n                  Submit\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n","// import { Box } from '../Box';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { chatngeFilterValue } from '../redux/filterSlice';\nimport { useState, useEffect } from 'react';\nimport { useDebounce } from 'components/utiles';\nimport { Box, Text, Input } from '@chakra-ui/react';\n\nconst filterId = nanoid();\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState('');\n  const debounsedfilterValue = useDebounce(filter, 500);\n\n  useEffect(() => {\n    dispatch(chatngeFilterValue(debounsedfilterValue));\n  }, [debounsedfilterValue, dispatch]);\n\n  const handleFilterChange = e => {\n    setFilter(e.currentTarget.value.toLowerCase());\n  };\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Text fontSize=\"xl\" mb=\"10px\" as=\"cite\">\n        Finde contact by name\n      </Text>\n      <Input\n        variant=\"flushed\"\n        placeholder=\"John Doe\"\n        _placeholder={{ opacity: 1, color: 'teal.700' }}\n        width=\"400px\"\n        value={filter}\n        type=\"text\"\n        id={filterId}\n        onChange={handleFilterChange}\n      />\n    </Box>\n  );\n};\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Formik, Form, Field } from 'formik';\nimport { useState } from 'react';\n\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Flex,\n  Box,\n  Heading,\n} from '@chakra-ui/react';\n\nimport { useUpdateContactMutation } from 'components/redux/contactsApi';\n\nimport { patternName } from 'components/utiles';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\nexport const EditModal = ({\n  onClose,\n  name: prevName,\n  number: prevNumber,\n  id,\n}) => {\n  const [name, setName] = useState(prevName);\n  const [number, setNumber] = useState(prevNumber);\n  const [updateContact] = useUpdateContactMutation();\n\n  const formSubmitHandler = (_, { resetForm }) => {\n    updateContact({ name, number, id });\n    onClose();\n    resetForm();\n  };\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box p={2}>\n        <Box textAlign=\"center\">\n          <Heading>Edit contact</Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <Formik initialValues={initialValues} onSubmit={formSubmitHandler}>\n            {props => (\n              <Form>\n                <Field name=\"name\" id={nameId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel>Name</FormLabel>\n                      <Input\n                        {...field}\n                        value={name}\n                        type=\"text\"\n                        placeholder=\"John Doe\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern={patternName}\n                        onChange={e => setName(e.target.value)}\n                      />\n                    </FormControl>\n                  )}\n                </Field>\n                <Field name=\"number\" patern={patternName} id={numberId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      mt={4}\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel>Nunber</FormLabel>\n                      <Input\n                        {...field}\n                        value={number}\n                        type=\"telephone\"\n                        placeholder=\"0960000000\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        onChange={e => setNumber(e.target.value)}\n                      />\n                    </FormControl>\n                  )}\n                </Field>\n                <Button\n                  type=\"submit\"\n                  colorScheme=\"yellow\"\n                  variant=\"outline\"\n                  width=\"full\"\n                  mt={6}\n                >\n                  Submit\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n","import { Avatar, Button, Flex, Text, useDisclosure } from '@chakra-ui/react';\nimport { RiEditLine } from 'react-icons/ri';\nimport { useDeleteContactMutation } from 'components/redux/contactsApi';\nimport { createPortal } from 'react-dom';\nimport { ModalWrap } from 'components/ModalWrap/ModalWrap';\nimport { EditModal } from 'components/EditModal/EditModal';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ContactItem = ({ id, name, number }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [deleteContact, { isLoading: loading }] = useDeleteContactMutation();\n  return (\n    <Flex key={id} alignItems=\"center\" justifyContent={'space-between'}>\n      <Avatar name={name} colorScheme=\"twitter\" size=\"md\" />\n      <Text fontSize=\"xl\" as=\"cite\">\n        {' '}\n        {name}:\n      </Text>\n      <Text fontSize=\"xl\"> {number}</Text>\n      <Flex gap={'20px'}>\n        <Button\n          isLoading={loading}\n          colorScheme=\"red\"\n          variant=\"outline\"\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n        </Button>\n        <Button onClick={onOpen} variant=\"outline\" colorScheme=\"yellow\">\n          <RiEditLine />\n        </Button>\n      </Flex>\n      {createPortal(\n        <ModalWrap isOpen={isOpen} onClose={onClose}>\n          <EditModal onClose={onClose} name={name} number={number} id={id} />\n        </ModalWrap>,\n        modalRoot\n      )}\n    </Flex>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectTextFilter } from '../redux/selectors';\nimport { useFetchContactsQuery } from 'components/redux/contactsApi';\nimport GiffSadDog from '../../images/sad-dog.gif';\n\nimport { Box, Flex, Image, Text } from '@chakra-ui/react';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nconst getFilteredContacts = (contacts, filterValue) => {\n  if (filterValue === '') {\n    return contacts;\n  }\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue)\n  );\n};\n\nexport const ContactList = ({ onEdit }) => {\n  const { data } = useFetchContactsQuery();\n  const filterValue = useSelector(selectTextFilter);\n\n  const visibleContacts = getFilteredContacts(data, filterValue);\n\n  return (\n    <Box p=\"10px\" pt=\"40px\">\n      <Flex gap={'20px'} flexDirection=\"column\">\n        {visibleContacts?.length === 0 ? (\n          <>\n            <Text textAlign=\"center\" as=\"cite\" size=\"xl\">\n              There are no contacts here yet\n            </Text>\n            <Image\n              src={GiffSadDog}\n              alt=\"Sad dog\"\n              w={'500px'}\n              alignSelf=\"center\"\n            />\n          </>\n        ) : (\n          visibleContacts?.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))\n        )}\n      </Flex>\n    </Box>\n  );\n};\n","import { useFetchContactsQuery } from 'components/redux/contactsApi';\nimport { createPortal } from 'react-dom';\nimport { useDisclosure, Button, Box, Flex } from '@chakra-ui/react';\n\nimport { Container } from 'components/utiles';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ModalWrap } from 'components/ModalWrap/ModalWrap';\nimport { TbUserPlus } from 'react-icons/tb';\nimport { Spinner } from 'components/utiles/spinner';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ContactsPage = () => {\n  const { error, isLoading } = useFetchContactsQuery();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Container>\n        <Box p=\"10px\" position=\"relative\">\n          <Button\n            variant=\"outline\"\n            position={'absolute'}\n            top=\"20px\"\n            right={'95px'}\n            colorScheme=\"teal\"\n            onClick={onOpen}\n            size=\"lg\"\n          >\n            <TbUserPlus enableBackground={'teal'} size=\"1.3em\" />\n          </Button>\n          <Flex justifyContent={'center'}>\n            <Filter />\n          </Flex>\n          {isLoading && !error && <Spinner />}\n          <ContactList />\n        </Box>\n        {createPortal(\n          <ModalWrap isOpen={isOpen} onClose={onClose}>\n            <ContactForm onClose={onClose} />\n          </ModalWrap>,\n          modalRoot\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["initialValues","name","number","nameId","nanoid","numberId","ContactForm","onClose","useState","setName","setNumber","useAddContactMutation","addContact","data","useFetchContactsQuery","width","align","justifyContent","p","textAlign","my","onSubmit","_","resetForm","find","state","Notification","props","id","field","form","isRequired","isInvalid","errors","touched","I","value","type","placeholder","_placeholder","opacity","color","pattern","patternName","onChange","e","target","patern","mt","colorScheme","variant","filterId","Filter","dispatch","useDispatch","filter","setFilter","debounsedfilterValue","useDebounce","useEffect","chatngeFilterValue","display","flexDirection","fontSize","mb","as","currentTarget","toLowerCase","EditModal","prevName","prevNumber","useUpdateContactMutation","updateContact","modalRoot","document","querySelector","ContactItem","useDisclosure","isOpen","onOpen","useDeleteContactMutation","deleteContact","loading","isLoading","alignItems","size","gap","onClick","createPortal","ModalWrap","ContactList","onEdit","visibleContacts","contacts","filterValue","contact","includes","getFilteredContacts","useSelector","selectTextFilter","pt","length","src","GiffSadDog","alt","w","alignSelf","map","error","position","top","right","enableBackground"],"sourceRoot":""}